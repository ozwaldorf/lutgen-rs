[package]
name = "lutgen-studio"
version = "0.3.0"
description = "Offical GUI for Lutgen, the best way to apply popular colorschemes to any image or wallpaper!"
edition = "2024"
license = "MIT"
authors = ["Ossian Mapes <self@ossian.dev>"]
readme = "../../README.md"
repository = "https://github.com/ozwaldorf/lutgen-rs"
homepage = "https://github.com/ozwaldorf/lutgen-rs"
keywords = [
  "image-processing",
  "color",
  "hald-clut",
  "lookup-tables",
  "gaussian",
]
categories = ["multimedia::images"]
include = ["Cargo.toml", "**/*.rs", "assets"]

[[bin]]
name = "lutgen-studio"
path = "src/bin/main.rs"

[dependencies]
lutgen = { path = "../lib", version = "0.14" }
lutgen-palettes = { path = "../palettes", version = "0.4" }

bpaf.workspace = true
strum.workspace = true
serde.workspace = true
dirs.workspace = true

env_logger = "0.11"
log = "0.4"
egui = "0.32.0"
egui-file-dialog = "0.11.0"
eframe = { version = "0.32.0", default-features = false, features = [
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",       # To support Linux (and CI)
    "x11",           # To support older Linux distributions (restores one of the default features)
]}
serde_json = "1.0"
web-time = "1.1"

# native deps
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
image.workspace = true
env_logger = "0.11.8"
ureq = "3.0.12"

# web deps
[target.'cfg(target_arch = "wasm32")'.dependencies]
image = { workspace = true, features = ["serde"] }
poll-promise = { version = "0.3", features = ["web"] }
getrandom = { version = "0.3", features = ["wasm_js"] }
wasm-bindgen-futures = "0.4"
web-sys = "0.3" # to access the DOM
gloo-worker = "0.5"
base64 = "0.22"
rfd = "0.15"
